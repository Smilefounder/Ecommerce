<div class="simple-table">
    <div>
        <input type="text" id="recommendation-product-searchbox" class="large" placeholder="@("Type keyword to search product")" />
    </div>
    <table style="margin-top:10px">
        <thead>
            <tr>
                <th>@("Recommended Product Name".Localize())</th>
                <th>@("Brand".Localize())</th>
                <th>@("Rank".Localize())</th>
                <th></th>
            </tr>
        </thead>
        <tbody data-bind="foreach: $root.recommendations">
            <tr>
                <td data-bind="text: productName"></td>
                <td data-bind="text: brandName"></td>
                <td>
                    <input type="text" class="mini" data-bind="value: rank" />
                </td>
                <td>
                    <a href="#" data-bind="click: $root.removeRecommendation">
                        @Html.IconImage("minus small")
                    </a>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    (function ($) {
        var commerceName = '@(ViewContext.RequestContext.GetRequestValue("commerceName"))';
        var vm = null;

        kb.events.on('Product/Edit/FormDataBinding', function (sender, args) {
            vm = args.viewModel;
            vm.recommendations = ko.observableArray();
            vm.removeRecommendation = function (recommendation) {
                vm.recommendations.remove(recommendation);
            }
        });

        kb.events.on('Product/Edit/ViewModelReady', function (sender, args) {
            loadRecommendations(args.productId).done(function (data) {
                $.each(data, function () {
                    vm.recommendations.push(ko.mapping.fromJS(this));
                });
            });

            initSearchBox();
        });

        kb.events.on('Product/Edit/FormSubmitted', function (sender, args) {
            var defer = $.Deferred();
            var data = {
                productId: vm.data().Id(),
                recommendations: ko.mapping.toJS(vm.recommendations())
            };
            $.ajax({
                url: '/Kooboo.Commerce.Recommendations/Recommendation/Save?commerceName=' + commerceName,
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json'
            })
            .done(function (result) {
                if (result.Success) {
                    defer.resolve();
                } else {
                    info.show(result.Messages.join('<br/>'), false);
                    defer.reject();
                }
            });

            return defer.promise();
        });

        function loadRecommendations(productId) {
            return $.get('/Kooboo.Commerce.Recommendations/Recommendation/List', {
                commerceName: commerceName,
                productId: productId
            });
        }

        function initSearchBox() {
            $('#recommendation-product-searchbox').autocomplete({
                source: '/Kooboo.Commerce.Recommendations/Recommendation/SearchProducts?commerceName=' + commerceName,
                minLength: 2,
                select: function (event, ui) {
                    vm.recommendations.push({
                        productId: ko.observable(ui.item.id),
                        productName: ko.observable(ui.item.name),
                        brandName: ko.observable(ui.item.brandName),
                        rank: ko.observable(0)
                    });
                }
            })
            .data('ui-autocomplete')._renderItem = function (ul, item) {
                return $('<li>').append('<a>' + item.name + ' - ' + item.brandName + '</a>')
                                .appendTo(ul);
            };
        }

    })(jQuery);
</script>