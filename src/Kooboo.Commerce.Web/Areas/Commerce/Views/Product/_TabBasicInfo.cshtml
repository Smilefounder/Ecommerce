<div class="common-form">
    <table data-bind="with: product">
        <tbody>
            <tr>
                <th>@("Name".Localize())</th>
                <td>
                    <input type="text" name="Name" data-bind="value: name" class="medium"
                           data-val="true"
                           data-val-required="@("Required".Localize())" />
                    <span data-valmsg-for="Name" data-valmsg-replace="true"></span>
                </td>
            </tr>
            <tr>
                <th>@("Brand".Localize())</th>
                <td>
                    <div class="medium" data-bind="select2: $root.selectedBrand, select2Options: { textField: 'name', ajax: { url: '/Commerce/Product/SearchBrands' }}"></div>
                </td>
            </tr>
            <tr>
                <th>@("Categories".Localize())</th>
                <td>
                    <div class="medium" data-bind="select2: categories, select2Options: { multiple: true, textField: 'name', ajax: { url: '/Commerce/Product/SearchCategories' }}"></div>
                </td>
            </tr>
            <tr>
                <th>@("Publish".Localize())</th>
                <td><input type="checkbox" data-bind="checked: isPublished" /></td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    window.ProductEditor.tabs['BasicInfo'] = {
        init: function (context) {
            var model = context.model;
            var product = model.product;

            // Brand might be null, we use a always-non-null helper field 'selectedBrand' to help data binding
            model.selectedBrand = {
                id: ko.observable(),
                name: ko.observable()
            };

            var brand = ko.toJS(product.brand);
            if (brand) {
                model.selectedBrand.id(brand.id);
                model.selectedBrand.name(brand.name);
            }
        },

        onSubmitting: function (context) {
            var model = context.model;

            if (model.selectedBrand.id()) {
                if (!model.product.brand || !ko.toJS(model.product.brand)) {
                    model.product.brand = {
                        id: ko.observable(),
                        name: ko.observable()
                    };
                }

                model.product.brand.id(model.selectedBrand.id());
                model.product.brand.name(model.selectedBrand.name());
            }
        }
    }
</script>