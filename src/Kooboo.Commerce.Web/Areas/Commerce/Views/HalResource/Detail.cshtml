@model ResourceDescriptor
@{
    ViewBag.Title = "Resource".Localize() + " - " + Model.ResourceName;

    var itemResource = ViewBag.ItemResource as ResourceDescriptor;
}

@section Panel {

    @Html.HeaderPanel().Buttons(buttons =>
    {
        buttons.AddBackButton();
    })

}

<div class="block common-form">
    <table>
        <tr>
            <th>@("Resource Name".Localize())</th>
            <td>
                @Model.ResourceName
            </td>
        </tr>
        <tr>
            <th>@("URI".Localize())</th>
            <td>
                @Model.ResourceUri
            </td>
        </tr>
        <tr>
            <th>@("Is List Resource".Localize())</th>
            <td>
                @(Model.IsListResource ? "YES".Localize() : "NO".Localize())
            </td>
        </tr>
        @if (Model.IsListResource) { 
        <tr>
            <th>@("Item Resource".Localize())</th>
            <td>
                <a href="@Url.Action("Resource", RouteValues.From(Request.QueryString).Merge("resourceName", itemResource.ResourceName))">@itemResource.ResourceUri</a>
            </td>
        </tr>
        }
        <tr>
            <th>@("Implicit Link Provider".Localize())</th>
            <td>
                @if (Model.ImplicitLinkProvider != null)
                {
                    <span>
                        @Model.ImplicitLinkProvider.Name
                    </span>
                    <div class="tip">
                        @Model.ImplicitLinkProvider.Description
                    </div>
                }
                else
                {
                    <span>@("None".Localize())</span>
                }
            </td>
        </tr>
        <tr>
            <th></th>
            <td>
                <div id="link-list-container">
                    <button type="button" class="button" data-bind="click: addLink">@("Add Link".Localize())</button>
                    <div class="simple-table" data-bind="visible: links().length > 0" style="display:none;margin-top:10px">
                        <form id="links-form">
                            <table>
                                <thead>
                                    <tr>
                                        <th>@("Relation".Localize())</th>
                                        <th>@("Linked Resource".Localize())</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody data-bind="foreach: links">
                                    <tr>
                                        <td data-bind="text: relation"></td>
                                        <td>
                                            <span data-bind="text: destinationResourceName"></span>
                                        </td>
                                        <td>
                                            <a href="#" data-bind="click: $root.editLink">@Html.IconImage("edit-small")</a>
                                            <a href="#" data-bind="click: $root.deleteLink">@Html.IconImage("minus-small")</a>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </form>
                    </div>
                </div>
            </td>
        </tr>
    </table>
</div>

@Html.Partial("_LinkEditorDialog")
<script>
    $(function () {
        var resourceName = '@Html.Raw(Model.ResourceName)';
        var linkListModel = new ResourceLinkListModel();

        function ResourceLinkListModel() {
            var _this = this;

            this.links = ko.observableArray();

            this.findLinkById = function (id) {
                return _.find(_this.links(), function (link) {
                    return link.id() === id;
                });
            }

            this.addLink = function () {
                ResourceLinkEditorDialog.open({
                    resourceName: resourceName
                });
            }

            this.editLink = function (link) {
                ResourceLinkEditorDialog.open({
                    resourceName: resourceName,
                    linkId: link.id()
                });
            }

            this.deleteLink = function (link) {
                $.post('@Url.Action("DeleteLink")?linkId=' + link.id())
                 .done(function (result) {
                     if (result.Success) {
                         _this.links.remove(link);
                     } else {
                         info.show(result.Messages.join('<br/>'), false);
                     }
                 });
            }
        }

        $.get('@Url.Action("Links")', { resourceName: resourceName })
         .then(function (links) {
             ko.mapping.fromJS(links, {}, linkListModel.links);
             ko.applyBindings(linkListModel, document.getElementById('link-list-container'));
         });

        ResourceLinkEditorDialog.on('saved', function (linkId) {
            $.get('@Url.Action("ResourceLink")', { linkId: linkId })
             .then(function (data) {
                 var existing = linkListModel.findLinkById(linkId);
                 if (existing) {
                     ko.mapping.fromJS(data, {}, existing);
                 } else {
                     linkListModel.links.push(ko.mapping.fromJS(data));
                 }
             });
        });
    });
</script>