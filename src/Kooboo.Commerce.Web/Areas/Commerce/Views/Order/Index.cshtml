@using Kooboo.Commerce.Orders;
@model PagedList<Kooboo.Commerce.Orders.Order>
@{
    ViewBag.Title = "Index";
    IEnumerable<IExtendedQuery<Order, OrderQueryModel>> extendedQueries = ViewBag.ExtendedQueries as IEnumerable<IExtendedQuery<Order, OrderQueryModel>>;
    var extendedQueryViewModel = new ViewDataDictionary();
    extendedQueryViewModel.Add("GetExtendedParametersUrl", "/Commerce/Order/GetParameters");
    extendedQueryViewModel.Add("SaveExtendedParametersUrl", "/Commerce/Order/SaveParameters");
    extendedQueryViewModel.Add("ExecuteQueryUrl", "/Commerce/Order/ExtendQuery");
}

@helper RenderSingleItem(string text, string url) {
    <li class="SingleItem" style="display:none;">
        <span>
            <a href="javascript:;" onclick="Goto('@url');">@text</a>
        </span>
    </li>
}

@section Panel {
    @(Html.HeaderPanel().Buttons(buttons =>
    {
        buttons.AddCreateButton();
        buttons.AddDeleteButton();
        buttons.Add().WithCustomHtml(RenderSingleItem("View", "/Commerce/Order/Detail").ToHtmlString());
        buttons.Add().WithCustomHtml(RenderSingleItem("Edit", "/Commerce/Order/Create").ToHtmlString());
    }))
}

@section Topbar {
    <h1 class="title">@ViewBag.Title</h1>
    <div class="search-panel">
        @Html.Partial("_Search")
        <a class="more">@Html.IconImage("arrow small black-down")</a>
        @Html.Partial("_ExtendedQueryParameter", extendedQueries, extendedQueryViewModel)
    </div>
}

<div class="common-table">
@using (Html.BeginForm("Delete", "Order", RouteValues.From(Request.QueryString), FormMethod.Post, new { @class = "no-stop" }))
{
    <table>
        <thead>
            <tr>
                <th class="checkbox">
                    <input type="checkbox" class="select-all">
                </th>
                <th>
                    @("Id".Localize())
                </th>
                <th>
                    @("Customer".Localize())
                </th>
                <th>
                    @("Total".Localize())
                </th>
                <th>
                    @("Order Status".Localize())
                </th>
                <th>
                    @("Create Date".Localize())
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model)
            {
                <tr>
                    <td class="checkbox ">
                        <input type="checkbox" class="select" name="select" value="@p.Id" onchange="SelectItem();" data-id-property="Id" autocomplete="off">
                    </td>
                    <td>
                        <a href="/Commerce/Order/Detail?commerceName=@Request.QueryString["commerceName"]&id=@(p.Id)&return=/Commerce/Order">@p.Id</a>
                    </td>
                    <td>
                        @p.Customer.FullName
                    </td>
                    <td>
                        @(p.Total)
                    </td>
                    <td>
                        @(p.OrderStatus)
                    </td>
                    <td>
                        @(p.CreatedAtUtc.ToShortDateString())
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
</div>
<script type="text/javascript">
    $(function () {
        var table = $('.common-table table');
        table.checkableTable();
        table.grid();
    });

    function SelectItem() {
        var cbs = $('form input:checkbox:checked');
        if (cbs.length == 1) {
            $('li.SingleItem').show();
        } else {
            $('li.SingleItem').hide();
        }
    }

    function Goto(url) {
        window.leaveConfirm.pass();
        var cbs = $('form input:checkbox:checked');
        if (cbs.length == 1) {
            var id = cbs.val();
            window.location.href = url + '?commerceName=@Request.QueryString["commerceName"]&return=/Commerce/Order?commerceName=@Request.QueryString["commerceName"]&id=' + id;
        }
    }
</script>

<div class="pagination right">
    @Html.Pager(Model, "", ViewContext.RequestContext.AllRouteValues(), null)
</div>
