@model IEnumerable<dynamic>
@{
    var getUrl = ViewData["GetExtendedParametersUrl"];
    var saveurl = ViewData["SaveExtendedParametersUrl"];
    var executeurl = ViewData["ExecuteQueryUrl"];
}

<div class="more-search common-form" style="display:none;">
    <ul>
        @foreach (var q in Model)
        {
            <li>
                <a href="@(executeurl)?siteName=@Request.QueryString["siteName"]&commerceName=@Request.QueryString["commerceName"]&name=@(q.Name)">@(q.Name)</a>
                <a href="javascript:EditParameters('@(q.Name)');">Parameters</a>
            </li>
        }
    </ul>
</div>

<div id="extendedQueryParameterDiv" class="common-form" style="display:none;" data-bind="with: data">
    <div class="clearfix" data-bind="with: Query">
        <h3>Extended Query: <span data-bind="text: Name"></span></h3>
        <p data-bind="text: Description"></p>
    </div>
    <div class="clearfix">
        <table>
            <tbody data-bind="foreach: Parameters">
                <tr>
                    <td data-bind="text: Name"></td>
                    <td>
                        <input type="text" data-bind="value: Value" />
                        <em class="tooltip" data-bind="text: Description"></em>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
    <script type="text/javascript">
        utils.showMessage = function (title, message, level, funcClose) {
            info.show(message, (level || 'info') == 'info');
        };
        var vmEQP;
        $(function () {
            (function () {
                var searchPanel = $('div.search-panel');
                panel = searchPanel.find('div.more-search');
                moreLink = searchPanel.find('a.more').click(function () {
                    if (panel.is(':visible')) {
                        $(this).removeClass('active');
                        panel.slideUp();
                    } else {
                        $(this).addClass('active');
                        panel.slideDown();
                    }
                });
                searchPanel.find('.cancel').click(function () {
                    searchPanel.find('a.more').click();
                });
            })();

            vmEQP = new ObjectModel({
                getQueryUrl: function (self) {
                    return '@(getUrl)?commerceName=@(Request.QueryString["commerceName"])&name=' + self.Name();
                },
                getSaveUrl: function (self) {
                    return '@(saveurl)?commerceName=@(Request.QueryString["commerceName"])&name=' + self.Name();
                },
                onInit: function (self) {
                    self.Name = ko.observable(null);
                },
                beforeSave: function (self, data) {
                    return data.Parameters;
                }
            });

            ko.applyBindings(vmEQP, document.getElementById('extendedQueryParameterDiv'));
        });

        function EditParameters(name) {
            vmEQP.Name(name);
            vmEQP.getData();
            utils.showDialog('#extendedQueryParameterDiv', 'Edit Extended Query Parameters', function () {
                vmEQP.saveData();
            });
        }
    </script>
