<div class="hide">
    <div id="topbar-command-config-dialog">
        <div class="dialog-body"></div>
        <div class="buttons">
            <a href="#" class="button right gray" data-toggle="cancel-config">@("Cancel".Localize())</a>
            <a href="#" class="button right" data-toggle="submit-config">@("Submit".Localize())</a>
        </div>
    </div>
</div>

<script>

    (function ($) {

        $(function () {
            $('.header-panel [data-cmd-name]').each(function () {
                var $button = $(this);
                var options = {
                    commandName: $button.data('cmd-name'),
                    buttonText: $button.data('cmd-text'),
                    confirmMessage: $button.data('confirm'),
                    needConfig: $button.data('need-config'),
                    modelId: $button.data('model-id'),
                    modelIdProperty: $button.data('model-id-prop')
                };

                $button.on('click', function () {
                    if ($button.data('need-config') == true) {
                        window.TopbarCommandConfigDialog.instance().open(options);
                    } else {
                        executeCommand(options);
                    }
                });
            });
        });

        window.TopbarCommandConfigDialog = function () {
            var self = this;
            var $dialog = null;
            var $form = null;

            self.options = null;

            self.init = function () {
                if ($dialog !== null) {
                    return;
                }

                $dialog = $('#top-command-config-dialog').dialog({
                    modal: true,
                    autoOpen: false
                });

                $dialog.find('[data-toggle="cancel-config"]').click(function () {
                    self.close();
                    return false;
                });
                $dialog.find('[data-toggle="submit-config"]').click(function () {
                    self.submit();
                    return false;
                });
            }

            self.open = function (options) {
                self.options = options;
                self.init();

                $dialog.find('[data-toggle="submit-config"]').html(self.options.buttonText);

                $.get('/Commerce/Topbar/CommandConfig', { commandName: self.options.commandName })
                 .done(function (html) {
                     $dialog.find('.dialog-body').replaceWith(html);
                     $form = $dialog.find('form');
                     $.validator.unobtrusive.reparse($form);
                     $dialog.dialog('open');
                 });
            }

            self.submit = function () {
                if (!$form.valid()) {
                    return false;
                }

                executeCommand(self.options, $form.serializeArray());
                self.close();
            }

            self.close = function () {
                $dialog.dialog('close');
            }
        }

        function executeCommand(options, config) {
            if (options.confirmMessage) {
                if (!confirm(options.confirmMessage)) {
                    return false;
                }
            }

            var data = [];

            if (options.modelId) {
                data.push({
                    name: 'model[0].' + options.modelIdProperty || 'Id',
                    value: options.modelId
                });
            } else {
                $('[name=select]:checked').each(function (i) {
                    var idProp = $(this).data('id-property');
                    if (idProp) {
                        data.push({
                            name: 'model[' + i + '].' + idProp,
                            value: $(this).val()
                        });
                    }
                });
            }

            if (config) {
                $.each(config, function () {
                    data.push({
                        name: 'config.' + this.name,
                        value: this.value
                    });
                });
            }

            window.loading.show();

            $.post('@Url.Action("ExecuteToolbarCommand")?commandName=' + options.commandName, data, function (data, textStatus, jqXHR, postData) {
                window.loading.hide();
                parse_JsonResultData(data, textStatus, jqXHR);

            }, 'json');
        }

        function reloadPage() {
            location.href = location.href.replace(/#+$/, '');
        }

        var instance = new window.TopbarCommandConfigDialog();

        window.TopbarCommandConfigDialog.instance = function () {
            return instance;
        }

    })(jQuery);

</script>