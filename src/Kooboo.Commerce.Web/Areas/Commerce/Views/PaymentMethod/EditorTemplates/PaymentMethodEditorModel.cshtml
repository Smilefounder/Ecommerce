@model PaymentMethodEditorModel

@{
    var inputAdditionViewData = new
    {
        HtmlAttributes = new
        {
            @class = "xxlarge"
        }
    };
}

<div class="common-form">
    @using (Html.BeginForm("Save", "PaymentMethod", RouteValues.From(Request.QueryString)))
    {
        @Html.HiddenFor(m => m.Id)
        @Html.ValidationSummary(true)
        <table>
            <tbody>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.PaymentProcessorName)</th>
                    <td>
                        <select name="PaymentProcessorName" class="xxlarge" data-bind="options: availablePaymentProcessors, optionsText: 'name', optionsValue: 'name', value: paymentProcessorName"></select>
                        @Html.ValidationMessageFor(m => m.PaymentProcessorName)
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.DisplayName)</th>
                    <td>
                        @Html.TextBoxFor(m => m.DisplayName, new { data_bind = "value: displayName", @class = "xxlarge" })
                        @Html.ValidationMessageFor(m => m.DisplayName)
                    </td>
                </tr>
                @Html.EditorFor(m => m.UniqueId, inputAdditionViewData)
                <tr>
                    <th>@Html.DisplayNameFor(m => m.AdditionalFeeChargeMode)</th>
                    <td>
                        @Html.DropDownListFor(m => m.AdditionalFeeChargeMode, Model.AllFeeChargeModes, new
                        {
                            @class = "xxlarge",
                            data_bind = "value: additionalFeeChargeMode"
                        })
                    </td>
                </tr>
                <tr data-bind="visible: additionalFeeChargeMode() == 'ByAmount'">
                    <th>@Html.DisplayNameFor(m => m.AdditionalFeeAmount)</th>
                    <td>
                        @Html.TextBoxFor(m => m.AdditionalFeeAmount, new { @class = "xxlarge" })
                        @Html.ValidationMessageFor(m => m.AdditionalFeeAmount)
                    </td>
                </tr>
                <tr data-bind="visible: additionalFeeChargeMode() == 'ByPercent'">
                    <th>@Html.DisplayNameFor(m => m.AdditionalFeePercent)</th>
                    <td>
                        @Html.TextBoxFor(m => m.AdditionalFeePercent, new { @class = "xxlarge" }) %
                        @Html.ValidationMessageFor(m => m.AdditionalFeePercent)
                    </td>
                </tr>
                <tr>
                    <th>@("Custom Fields".Localize())</th>
                    <td>
                        @Html.Partial("_SimpleCustomFields", Model.CustomFields)
                    </td>
                </tr>
            </tbody>
        </table>
    }
</div>

<script>
    $(function () {
        var jsModel = @Html.Raw(Model.ToJson(PropertyNaming.CamelCase));
        var viewModel = ko.mapping.fromJS(jsModel);

        viewModel.paymentProcessorName.subscribe(function (value) {
            viewModel.displayName(value);
        });

        ko.applyBindings(viewModel);
    });
</script>