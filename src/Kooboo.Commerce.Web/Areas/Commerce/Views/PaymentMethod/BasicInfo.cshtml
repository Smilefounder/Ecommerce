@model PaymentMethodEditorModel
@{
    Layout = "~/Areas/Commerce/Views/Shared/Blank.cshtml";
    ViewBag.Title = "Payment method".Localize();
    
    var inputAdditionViewData = new
    {
        HtmlAttributes = new
        {
            @class = "medium"
        }
    };
}

@section Panel {
    @Html.HeaderPanel().Buttons(buttons =>
    {
        buttons.AddCancelButton();
    })
}

<div class="block">
    @Html.Action("Steps", "PaymentMethod", new { area = "Commerce", step = 1 })

    <div class="common-form">
        @using (Html.BeginForm("BasicInfo", "PaymentMethod", RouteValues.From(Request.QueryString)))
        {
            @Html.HiddenFor(m => m.Id)
            @Html.ValidationSummary(true)
            <table>
                <tbody>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.ProcessorName)</th>
                        <td>
                            <select name="ProcessorName" class="medium" data-bind="options: availablePaymentProcessors, optionsText: 'name', optionsValue: 'name', value: processorName"></select>
                            @Html.ValidationMessageFor(m => m.ProcessorName)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.Name)</th>
                        <td>
                            @Html.TextBoxFor(m => m.Name, new { data_bind = "value: name", @class = "medium" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </td>
                    </tr>
                    @Html.EditorFor(m => m.UserKey, inputAdditionViewData)
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.AdditionalFeeChargeMode)</th>
                        <td>
                            @Html.DropDownListFor(m => m.AdditionalFeeChargeMode, Model.AllFeeChargeModes, new
                        {
                            @class = "medium",
                            data_bind = "value: additionalFeeChargeMode"
                        })
                        </td>
                    </tr>
                    <tr data-bind="visible: additionalFeeChargeMode() == 'ByAmount'">
                        <th>@Html.DisplayNameFor(m => m.AdditionalFeeAmount)</th>
                        <td>
                            @Html.TextBoxFor(m => m.AdditionalFeeAmount, new { @class = "medium" })
                            @Html.ValidationMessageFor(m => m.AdditionalFeeAmount)
                        </td>
                    </tr>
                    <tr data-bind="visible: additionalFeeChargeMode() == 'ByPercent'">
                        <th>@Html.DisplayNameFor(m => m.AdditionalFeePercent)</th>
                        <td>
                            @Html.TextBoxFor(m => m.AdditionalFeePercent, new { @class = "medium" }) %
                            @Html.ValidationMessageFor(m => m.AdditionalFeePercent)
                        </td>
                    </tr>
                </tbody>
            </table>
        }
    </div>

    <div class="wizard-buttons">
        <a data-ajaxform="" class="button">@("Next".Localize()) &raquo;</a>
    </div>
</div>

<script>
    $(function () {
        var jsModel = @Html.Raw(Model.ToJson(PropertyNaming.CamelCase));
        var viewModel = ko.mapping.fromJS(jsModel);

        viewModel.processorName.subscribe(function (value) {
            viewModel.name(value);
        });

        ko.applyBindings(viewModel);
    });
</script>
