<form class="common-form" id="invoice-reminder-config-form">
    <table>
        <tbody>
            <tr>
                <th>@("To".Localize())</th>
                <td>
                    <input type="text" data-bind="value: receivers" />
                    <em class="tip">
                        Comma separated email list. Use <code>{Customer}</code> as the placeholder for customer email
                    </em>
                </td>
            </tr>
            <tr>
                <th>@("Subject".Localize())</th>
                <td>
                    <input type="text" data-bind="value: subject" />
                    <em class="tip">Use <code>{param}</code> as the placeholder for parameter 'param'.</em>
                </td>
            </tr>
            <tr>
                <th>@("Body".Localize())</th>
                <td>
                    <textarea data-bind="value: body"></textarea>
                    <em class="tip">Use <code>{param}</code> as the placeholder for parameter 'param'.</em>
                </td>
            </tr>
            <tr>
                <th>@("Cancel if".Localize())</th>
                <td>
                    <div data-bind="foreach: cancelConditions">
                        <div class="conditions-expression">
                            <span data-bind="visible: $index() > 0">AND</span>
                            <span data-bind="visible: type() == 'Exclude'">NOT</span>
                            <span data-bind="html: expression"></span>
                        </div>
                    </div>
                    <a href="#" data-bind="click: editCancelCondition">
                        @Html.IconImage("edit-small")
                    </a>
                    <div>
                        <em class="tip">
                            @("If the activity is executed asynchrously, it'll be cancelled if cancel condition is met.")
                        </em>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</form>

@Html.Partial("~/Areas/Commerce/Views/Shared/_ConditionsDialog.cshtml")

<script>
    $(function () {

        var cancelConditionModelType = '@(typeof(CancelConditionModel).AssemblyQualifiedNameWithoutVersion())';

        var editor = ActivityEditor.current();
        var model = new OrderReminderViewModel();
        var ruleId = editor.model().ruleId();

        editor.on('databound', function (sender, args) {
            ko.applyBindings(model, document.getElementById('invoice-reminder-config-form'));

            var attachedActivityInfoId = editor.model().attachedActivityInfoId();
            if (attachedActivityInfoId) {
                var url = '@Url.Action("GetConfig", "OrderReminder", new { area = Strings.AreaName })';
                return $.get(url + '?ruleId=' + ruleId + '&attachedActivityInfoId=' + attachedActivityInfoId)
                        .then(function (data) {
                            ko.mapping.fromJS(data, {}, model);
                        });
            }
        });

        editor.on('saving', function (sender, args) {
        });

        editor.on('saved', function (sender, args) {
            var attachedActivityId = editor.model().attachedActivityInfoId();
            var url = '@Url.Action("SaveConfig", "OrderReminder", new { area = Strings.AreaName })';
            return kb.http.safePost(url + '?ruleId=' + ruleId + '&attachedActivityInfoId=' + attachedActivityId, ko.mapping.toJS(model));
        });

        ConditionsDialog.instance().setDataContextType(cancelConditionModelType);
        ConditionsDialog.instance().onSubmitted = function (conditions) {
            model.cancelConditions.removeAll();
            $.each(conditions, function () {
                model.cancelConditions.push(ko.mapping.fromJS(this));
            });
        };

        function OrderReminderViewModel() {
            var _this = this;

            this.receivers = ko.observable('{Customer}');
            
            this.subject = ko.observable();

            this.body = ko.observable();

            this.cancelConditions = ko.observableArray();

            this.editCancelCondition = function () {
                ConditionsDialog.instance().open({
                    title: '@("Cancel Conditions".Localize())',
                    conditions: ko.mapping.toJS(_this.cancelConditions())
                });
            }
        }
    });
</script>