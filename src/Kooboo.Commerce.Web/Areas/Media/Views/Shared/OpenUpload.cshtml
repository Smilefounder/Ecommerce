@using Kooboo.Commerce.Handlers;
@model IDictionary<string, object>
@{
    Layout = "~/Views/Shared/Blank.cshtml";
    var model = Model ?? new Dictionary<string, object>();
    string dialogId = model.ContainsKey("file") ? model["dialogId"].ToString() : "";
    string fileType = model.ContainsKey("fileType") ? model["fileType"].ToString() : "files";
    int maxFiles = model.ContainsKey("maxFiles") ? Convert.ToInt32(model["maxFiles"]) : -1;
    int limitSize = model.ContainsKey("limitSize") ? Convert.ToInt32(model["limitSize"]) : 50 * 1024 * 1024; // 50MB
    string autoStart = model.ContainsKey("autoStart") ? model["autoStart"].ToString().ToLower() : "false";
    string owner = model.ContainsKey("owner") ? model["owner"].ToString() : "";
    string property = model.ContainsKey("property") ? model["property"].ToString() : "";

    var ft = FileType.CommonTypes.FirstOrDefault(o => o.TypeCode == fileType);
    var fileTypes = ft == null ? ".+$" : ft.RegexPattern; 
}


<form id="uploadForm" action="/Areas/Commerce/Handlers/UploadHandler.ashx/?owner=@owner" method="POST" enctype="multipart/form-data" onload="InitForm">
    <div class="alert alert-block">
        <h5 class="alert-heading">注：</h5>
        <ol>
            @if (!string.IsNullOrEmpty(fileTypes) && fileTypes != ".+$")
            {
                <li>仅能上传后缀名为(@(fileTypes))的文件</li>
            }
            @if (limitSize > 0)
            {
                <li>文件大小不超过&nbsp;@(FileType.GetFriendlyFileSize(limitSize))</li>
            }
            @if (maxFiles > 0)
            {
                <li>只能上传@(maxFiles)个文件</li>
            }
        </ol>
    </div>
    <div>
        <button type="button" class="btn btn-primary" onclick="$('#fileSelector').trigger('click');" data-bind="enable: $root.CanAddFile()">
            <i class="icon-picture"></i>
            <span>选择文件</span>
        </button>
        <button type="button" class="btn btn-primary" onclick="vfm.StartUpload();">
            <i class="icon-upload"></i>
            <span>上传</span>
        </button>
    </div>
    <div data-bind="foreach:Files">
        <div class="panel ui-corner-all lgap0">
            <div>
                <a data-bind="attr: { href: url }" target="_blank"><span data-bind="    text:name"></span></a>
                (<span data-bind="text:$root.formatFileSize(size())"></span>)
                <button type="button" class="btn btn-warning btn-circle btn-mini" data-bind="visible: $root.Uploading($data), click: $root.CancelFile" title="取消上传">
                    <i class="icon-ban-circle">cancel</i>
                </button>
                <button type="button" class="btn btn-danger btn-circle btn-mini" data-bind="visible: $root.Uploaded($data), click: $root.RemoveFile" title="删除文件">
                    <i class="icon-remove">remove</i>
                </button>
            </div>
            <div class="progress progress-striped active" style="height: 8px; margin-bottom: 0px; margin-top: 6px;">
                <div class="bar" data-bind="style:{ width: $data.progress() + '%'}, attr: { title: $data.progress() + '%'} " style="height: 8px;"></div>
            </div>
        </div>
    </div>
    <input id="fileSelector" type="file" name="files[]" style="display: none;">
</form>
<div class="row form-actions">
    <button class="btn btn-success" type="button" onclick="OK();">
        <i class="icon-ok"></i><span>保存</span></button>
    <button class="btn" type="button" onclick="Cancel();">
        <i class="icon-remove"></i><span>取消</span></button>
</div>


@section ScriptCSS {
    <script type="text/javascript">
        var vfm;
        $(function () {
            vfm = new FUVM('uploadForm', {
                owner: '@(owner)',
                property: '@(property)',
                acceptFileTypes: /@(fileTypes)/i,
                maxFiles: @(maxFiles),
                autoStart: @(autoStart)
                });
            ko.applyBindings(vfm, document.getElementById('uploadForm'));
        });


        function OK() {
            utils.postMessage('fileselected', { owner: '@(owner)', property: '@property', files: ko.toJS(vfm.Files) });
            utils.closeDialog('@dialogId');
        }

        function Cancel() {
            utils.postMessage('canceldialog', { dialogId:'@dialogId' });
            utils.closeDialog('@dialogId');
        }


    </script>
}