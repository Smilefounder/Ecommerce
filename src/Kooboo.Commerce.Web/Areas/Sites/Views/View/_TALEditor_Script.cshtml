@model dynamic
@{
    var dataSourceContext = new Kooboo.CMS.Sites.DataSource.DataSourceContext(Site.Current, null);
    var dataSources = ServiceFactory.GetService<DataSourceSettingManager>().All(Site.Current, "")
        .Select(it => new
        {
            Name = it.DataName,
            IsEnumerable = it.DataSource.IsEnumerable(),
            Definitions = it.DataSource.GetDefinitions(dataSourceContext).Keys
        });

    var dataSourceJson = Newtonsoft.Json.JsonConvert.SerializeObject(dataSources);

    var pages = ServiceFactory.PageManager.AllPagesFlattened(Site.Current)
        .Select(it => it.LastVersion().AsActual())
        .Where(it => it != null)
        .Select(it => new
        {
            it.FullName,
            Parameters = it.Route.GetRouteParameters()
        });
    var pagesJosn = Newtonsoft.Json.JsonConvert.SerializeObject(pages);
    
    var route = ViewContext.RequestContext.AllRouteValues().Merge("search", null);
    var mediaLibraryUrl = Url.Action("Selection", "MediaContent", route.Merge("Area", "Contents").Merge("FolderName", "").Merge("listType", "grid").Merge("SingleChoice", "true"));

    // Submission Form
    var submissions = ServiceFactory.GetService<SubmissionSettingManager>().All(Site.Current, "")
    .Select(it => new
    {
        Name = it.Name,
        Settings = ServiceFactory.GetService<SubmissionSettingManager>().Get(Site.Current,it.Name).Settings
    });
    var submissionsJson = Newtonsoft.Json.JsonConvert.SerializeObject(submissions);
}
<script>
    window.keepLoading = true;
    var mediaLibraryUrl = '@Html.Raw(mediaLibraryUrl)';
    var meta = {
            dataSourceMeta : @Html.Raw(dataSourceJson),
            pages: @Html.Raw(pagesJosn),
            submissions:@Html.Raw(submissionsJson)
        };
    var __isLayout__ = false;
    var __datasrc__ = [];
    var __pages__ = [];
    _.each(meta.pages,function(page){
        var params = [];
        _.each(page.Parameters,function(param){
            params.push({
                name:param,
                value:"",
            });
        });
        __pages__.push({
            name:page.FullName,
            external: false,
            params:params
        });
    });
    var __submissions__=[];
    _.each(meta.submissions,function(submit){
        __submissions__.push({
            name:submit.Name,
            settings:_.map(submit.Settings,function(v,k){return {key:k,value:v}})
        });
    });
   
    var externalLink = "@("External link".Localize())";
    var defaultOptionName = "@("--Please selece an item--".Localize())";

    var __msgs__ = {
        'convert_to_label_confirm': "@("Do you want to convert this element with children into a label!".Localize())",
        'can_not_be_label':"@("Can not convert an element with children into a label!".Localize())",
        'remove_data_binding_confrim': "@("Are you sure to delete the data binding?".Localize())",
        'save_binding_success':"@("successed".Localize())",
        'url_invalid':"@("url invalid!".Localize())",
        'not_empty':"@("please enter a vlaue".Localize())"
    };

    var __urls__ = {};
   

</script>
<script src="~/Areas/Sites/Scripts/talEditor/common.js"></script>
<script src="~/Areas/Sites/Scripts/talEditor/view-panel.js"></script>
<script>
    $(function () {
        var textArea = $('#Body');
        textArea.codeMirror();
        var codeMirrorAPI = textArea.data("codeMirror");
        codeMirrorAPI.on('change', function (e) {
            if (e && e.historySize().undo > 0) {
                window.leaveConfirm.stop();
            } else {
                window.leaveConfirm.pass();
            }
        });
        $('#tab_sourceCode').on('show',function(){
            codeMirrorAPI.refresh();
            //setTimeout(function(){codeMirrorAPI.refresh();},10);
        });
        window.ajaxFormParam = {
            beforeSerialize: function ($form, options) {
                if(__ctx__.isPreview){
                    textArea.val(__ctx__.editorWrapper.html());
                }else{
                    textArea.val(codeMirrorAPI.getValue());
                }
            }
        };

        $('.tabs').koobooTab();
        $("#tab_dataBinding").applyBindings(new PanelModel());
        //$("#span-tag-text-container").on('click','a', function (e) {
        //    e.preventDefault();
        //});
        $('div.block').on('click','.title', function () {
            $(this).parent('.block').toggleClass('active');
        });
        $("input[name=ConvertedType]").on('click', function () {
            $('label[for='+$(this).attr('id')+']').click();
        });
        $("#tab-data-source").click();

        //switch design mode
        __conf__.editorPosRight = $("#div-editor-container").css("right");
        $("#design-view-tags").on('click', 'a', function () {
            var wrapper = __ctx__.editorWrapper;
            if ($(this).attr('type') == 'preview') {
                wrapper.html(codeMirrorAPI.getValue());
                __ctx__.initEditorHandler();
                __ctx__.isPreview = true;
                __ctx__.highlighter.hide();
                __ctx__.highlighterCopy.hide();
                $("#tab-data-source").click();
                $("#div-editor-container").css({'right': __conf__.editorPosRight});
                $("#div-panel-container").show();
                $("div.layout-selector").show();
            } else {
                if(wrapper){
                    codeMirrorAPI.setValue(wrapper.html());
                }
                __ctx__.isPreview = false;
                $("#tab-data-binding").click();
                $("#div-editor-container").css({'right':0});
                $("#div-panel-container").hide();
                $("div.layout-selector").hide();
            }
        });
        __ctx__.action='@ViewContext.RequestContext.RouteData.Values["action"].ToString().ToLower()';
        if (__ctx__.action == "create"){
            _.delay(function(){
                $('.tabs').koobooTab().data("koobooTab").showTab(1);
            },200);
        }
        __ctx__.showStaticImgsHandler=function(){
            $.pop({
                url: mediaLibraryUrl,
                width: 900,
                height: 500,
                dialogClass: 'iframe-dialog',
                frameHeight: '100%',
                onload: function (handle, pop, config) {
                    top.onFileSelected = function (src, text) {
                        var panel = new PanelModel();
                        panel.image.saveTempStaticImg(src,text);
                    };
                }
            });
        };
        var siteName ='@ViewContext.RequestContext.GetRequestValue("SiteName")';
        __conf__.resizeImageUri="/{SiteName}/Kooboo-Resource/ResizeImage?url={url}&width=0&height=120&preserverAspectRatio=True&quality=80".replace("{SiteName}",siteName);
    });
</script>
