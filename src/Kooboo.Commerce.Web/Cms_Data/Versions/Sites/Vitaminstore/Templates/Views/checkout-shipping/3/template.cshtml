@using Kooboo.Commerce.API;
@{
    var countries = ViewBag.Countries;
    var shippingMethods = ViewBag.ShippingMethods;
}
<div class="checkout" id="checkout-shipping-main">
    <ul class="checkout-nav">
        <li class="checkout-nav-item completed"><a href="ShoppingCart.aspx"><i class="icon-ok"></i>Uw Besteloverzicht</a></li>
        <li class="split through"><a></a></li>
        <li class="checkout-nav-item selected"><a>Uw persoonlijke gegevens</a></li>
        <li class="split"><a></a></li>
        <li class="checkout-nav-item"><a>Bestelling afronden en betalen</a></li>
    </ul>
    <div id="ctl00_cpContent_UpdatePanel1">
        <div class="checkout-content select-shipping">
            <h2>
                Welkom, <span class="orange">@ViewContext.HttpContext.Membership().GetMembershipUser().UserName</span>
            </h2>
            <div data-bind="if: Addresses.Default">
                <p>Selecteer uw verzendmethode</p>
                <div class="shipping-options">
                    <table>
                        <tbody>
                            <tr>
                                <td></td>
                                <td></td>
                                <td class="shipping-cost shipping-cost-title">Verzendkosten</td>
                            </tr>
                            <tr>
                                <td class="option">
                                    <span class="vertical_middle" data-option="0">
                                        <input id="DeliverToDefaultAddress" name="DeliveryAddressOption" type="radio" checked="checked" data-bind="click: DeliverToDefaultAddress">
                                        <label for="DeliverToDefaultAddress">Bezorgen op uw adres</label>
                                    </span>
                                </td>
                                <td class="detail">PostNL Levert uw bestelling bij uw voorkeursadres af</td>
                                <td class="shipping-cost" data-bind="visible: !IsAlternativeAddressesVisible()">
                                    &euro; <span data-bind="text: CartInfo.ShippingCost"></span>
                                </td>
                            </tr>
                            <tr>
                                <td class="option">
                                    <span class="vertical_middle" data-option="1">
                                        <input id="DeliverToAnotherAddress" name="DeliveryAddressOption" type="radio" data-bind="click: DeliverToAlternativeAddress">
                                        <label for="DeliverToAnotherAddress">Bezorgen op een alternatief adres</label>
                                    </span>
                                </td>
                                <td class="detail">PostNL levert uw bestelling op een ander adres af</td>
                                <td class="shipping-cost" data-bind="visible: IsAlternativeAddressesVisible">
                                    &euro; <span data-bind="text: CartInfo.ShippingCost"></span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="shipping-content" data-bind="visible: !IsAlternativeAddressesVisible()">
                <div class="deliver-to-address">
                    <span data-bind="if: Addresses.Default">
                        Uw bestelling zal worden bezorgd op
                        <strong>
                            <span data-bind="text: Addresses.Default.Address1"></span>,
                            <span data-bind="text: Addresses.Default.Postcode"></span>,
                            <span data-bind="text: Addresses.Default.City"></span>,
                            <span data-bind="text: Addresses.Default.Country.Name"></span>
                        </strong>
                        <br />
                    </span>
                    <a href="#">Toch een ander adres opgeven?</a>
                </div>
            </div>
            <div class="shipping-content" data-bind="visible: IsAlternativeAddressesVisible" style="display:none">
                <div class="shipping-content">
                    <div class="deliver-another-address">
                        <table>
                            <tbody>
                                <tr>
                                    <td>
                                        <h3>Alternatief adres ingeven</h3>
                                    </td>
                                    <td class="alternative-existing">
                                        <h3>Uw alternatieve adressen:</h3>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 50%;" valign="top">
                                        <form id="new-address-form">
                                            @Html.AntiForgeryToken()
                                            <table class="add-another-address">
                                                <tbody>
                                                    <tr>
                                                        <td class="lbl">Bijnaam voor dit adres:</td>
                                                        <td>
                                                            <input name="LastName" type="text" maxlength="50" placeholder="Bijvoorbeeld 'Kantoor' of 'Thuis'" />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="lbl">Postcode</td>
                                                        <td>
                                                            <input name="Postcode" type="text" maxlength="100" class="postcode" data-val="true" data-val-required="*" />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="lbl">Huisnummer</td>
                                                        <td>
                                                            <input name="HouseNumber" type="text" maxlength="100" class="housenumber" data-val="true" data-val-required="*" data-val-regex="*" data-val-regex-pattern="^\d+$">
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="lbl">Toevoeging</td>
                                                        <td>
                                                            <input name="HouseNumberAddition" type="text" autocomplete="off" />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="lbl">Straat</td>
                                                        <td>
                                                            <input name="Address1" type="text" maxlength="200" class="street" data-val="true" data-val-required="*" />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="lbl">Plaats</td>
                                                        <td>
                                                            <input name="City" type="text" maxlength="200" class="city" data-val="true" data-val-required="*" />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="lbl">Land</td>
                                                        <td>
                                                            <select name="CountryId" class="country">
                                                                @foreach (var country in countries)
                                                                {
                                                                    <option value="@country.Id">@country.Name</option>
                                                                }
                                                            </select>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </form>
                                    </td>
                                    <td class="alternative-existing" valign="top">
                                        <table class="existing-addresses" border="0">
                                            <tbody data-bind="foreach: Addresses.Alternatives">
                                                <tr>
                                                    <td>
                                                        <input type="radio" name="ExistingAlternativeAddress" data-bind="attr: { id: 'ExistingAlternativeAddress_' + $index(), value: Id }, checked: $root.SelectedAlternativeAddressId">
                                                        <label data-bind="attr: { 'for': 'ExistingAlternativeAddress_' + $index() }">
                                                            <span data-bind="text: Address1"></span><br />
                                                            <span data-bind="text: Postcode"></span>
                                                            <span data-bind="text: City"></span><br />
                                                            <span data-bind="text: Country.Name"></span>
                                                        </label>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="buttons">
                <a href="ShoppingCart.aspx" class="btn continue-shopping">verder winkelen</a>
                <a class="btn orange-btn next-step" href="#" data-bind="click: Next">naar stap 3 <i class="icon-chevron-right"></i></a>
            </div>
            <dl class="right-box order-overview">
                <dt>
                    Uw Bestelling
                </dt>
                <!-- ko foreach: CartInfo.Items -->
                <dd class="item">
                    <strong data-bind="text: ProductPrice.Name"></strong> van <em data-bind="text: ProductPrice.Product.Brand.Name"></em>
                </dd>
                <dd>
                    <span data-bind="text: Quantity"></span>x <span class="price">€ <span data-bind="text: Total"></span></span>
                </dd>
                <!-- /ko -->
                <dd class="item summary">
                    <em>
                        Indicatie Verzendkosten:<br>
                        € <span data-bind="text: CartInfo.ShippingCost"></span>
                    </em>
                </dd>
                <dd class="item summary">
                    Totaal voor deze bestelling:<br>
                    <span class="total orange">€ <span data-bind="text: CartInfo.Subtotal"></span></span>
                </dd>
            </dl>
        </div>
    </div>
</div>
<script>
    $(function () {

        var viewModel = new ViewModel();

        function ViewModel() {
            var _this = this;

            this.Addresses = {
                Alternatives: ko.observableArray(),
                Default: null
            };

            this.CartInfo = {};

            this.ShippingAddressId = ko.observable();

            this.SelectedAlternativeAddressId = ko.observable();

            this.IsAlternativeAddressesVisible = ko.observable(false);

            this.DeliverToDefaultAddress = function (callback) {
                _this.IsAlternativeAddressesVisible(false);
                _this.SelectedAlternativeAddressId(null);
                _this.SelectAddress(_this.Addresses.Default, callback);
                return true;
            }

            this.DeliverToAlternativeAddress = function (callback) {
                _this.IsAlternativeAddressesVisible(true);
                _this.SelectAddress(null, callback);
                return true;
            }

            this.SelectAddress = function (address, callback) {
                if (address) {
                    $.when(_this.ChangeShippingAddress(address, callback), _this.ChangeBillingAddress(address))
                     .then(function () {
                         if (callback && typeof (callback) === 'function') {
                             callback();
                         }
                     });
                } else {
                    _this.ShippingAddressId(null);
                    if (callback && typeof (callback) === 'function') {
                        callback();
                    }
                }

                return true;
            }

            this.ChangeShippingAddress = function (address, callback) {
                return http.post('@Url.FrontUrl().SubmissionUrl("ChangeShippingAddress")', {
                    NewShippingAddressId: address.Id()
                })
                .then(function (result) {
                    if (result.Success) {
                        _this.ShippingAddressId(address.Id());
                        _this.RefreshCartInfo();
                    } else {
                        showErrors(result.Messages);
                    }
                });
            }

            this.ChangeBillingAddress = function (address) {
                return http.post('@Url.FrontUrl().SubmissionUrl("ChangeBillingAddress")', {
                    NewBillingAddressId: address.Id()
                });
            }

            this.Init = function () {
                _this.SelectedAlternativeAddressId.subscribe(function (addrId) {
                    if (addrId) {
                        _this.SelectAddress({ Id: ko.observable(addrId) });
                    }
                });
            }

            this.Next = function () {
                if (!_this.ShippingAddressId()) {
                    _this.SaveNewAddress(function () {
                        _this.NavigateToNextPage();
                    });
                } else {
                    _this.NavigateToNextPage();
                }
            }

            this.NavigateToNextPage = function () {
                location.href = '@Url.FrontUrl().PageUrl("Checkout-Confirm")';
            }

            this.SaveNewAddress = function (callback) {
                if ($('#new-address-form').valid()) {
                    $.ajax({
                        url: '@Url.FrontUrl().SubmissionUrl("AddAddress")',
                        type: 'POST',
                        data: $('#new-address-form').serializeArray()
                    })
                    .then(function (result) {
                        if (result.Success) {
                            var addressId = result.Model.AddressId;
                            _this.SelectAddress({ Id: ko.observable(addressId) }, callback);
                        } else {
                            showErrors(result.Messages);
                        }
                    });
                }
            }

            this.RefreshCartInfo = function () {
                return http.post('@Url.FrontUrl().SubmissionUrl("Cart")?action=cartinfo')
                       .then(function (result) {
                           if (result.Success) {
                               ko.mapping.fromJS(result.Model, {}, _this.CartInfo);
                           } else {
                               showErrors(result.Messages);
                           }
                       });
            }
        }

        $.when(loadAddresses(), viewModel.RefreshCartInfo())
         .then(function () {
             viewModel.Init();

             if (viewModel.Addresses.Default) {
                 viewModel.DeliverToDefaultAddress(databind);
             } else {
                 viewModel.DeliverToAlternativeAddress(databind);
             }
         });

        function databind() {
            ko.applyBindings(viewModel, document.getElementById('checkout-shipping-main'));
        }

        function loadAddresses() {
            return http.post('@Url.FrontUrl().SubmissionUrl("Shipping")?action=get-addresses')
                       .then(function (result) {
                           if (result.Success) {
                               if (result.Model.Default != null) {
                                   viewModel.Addresses.Default = ko.mapping.fromJS(result.Model.Default);
                               }
                               ko.mapping.fromJS(result.Model.Alternatives, {}, result.Model.Alternatives);
                           } else {
                               showErrors(result.Messages);
                           }
                       });
        }

        function showErrors(messages) {
            alert((messages || ['error']).join('\n'));
        }
    });
</script>