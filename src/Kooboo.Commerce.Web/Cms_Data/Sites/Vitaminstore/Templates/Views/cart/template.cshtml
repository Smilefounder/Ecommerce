@using Kooboo.Commerce.Api;

@{
    var logined = ViewContext.HttpContext.Membership().GetMember().Identity.IsAuthenticated;
    var nextStepUrl = logined ? Url.FrontUrl().PageUrl("Checkout-Shipping") : Url.FrontUrl().PageUrl("Login");
}

<div class="checkout" id="cart-main">
    <ul class="checkout-nav">
        <li class="checkout-nav-item selected"><a>Uw Besteloverzicht</a></li>
        <li class="split"><a></a></li>
        <li class="checkout-nav-item"><a>Uw persoonlijke gegevens</a></li>
        <li class="split"><a></a></li>
        <li class="checkout-nav-item"><a>Bestelling afronden en betalen</a></li>
    </ul>
    <div class="checkout-content cart">
        <table>
            <tbody>
                <tr data-bind="if: Items().length === 0">
                    <td colspan="6" class="empty">U heeft op dit moment geen artikelen in uw winkelwagen.</td>
                </tr>
                <tr data-bind="if: Items().length === 0">
                    <td colspan="6" class="separator"></td>
                </tr>
                <!-- ko foreach: Items -->
                <tr>
                    <td rowspan="3" class="pic top">
                        <a data-bind="attr: { href: '/product/' + ProductPrice.ProductId() }">
                            <img style="width:115px;height:115px;" data-bind="attr: { src: $root.GetDefaultImageUrl(ProductPrice.Product) }">
                        </a>
                    </td>
                    <td colspan="3" class="name top">
                        <strong data-bind="text: ProductPrice.Name"></strong> van <em data-bind="text: ProductPrice.Product.Brand.Name"></em>
                    </td>
                    <td colspan="2" class="subtotal top remove">
                        <a href="#" data-bind="click: $root.RemoveItem">Product verwijderen</a>
                        <i class="icon-remove"></i>
                    </td>
                </tr>
                <tr>
                    <td class="content field-title">Inhoud</td>
                    <td class="quantity field-title">Aantal</td>
                    <td class="price field-title"><em>Prijs per stuk</em></td>
                    <td class="discount field-title" data-bind="visible: Discount"><em>Uw voordeel</em></td>
                    <td class="subtotal field-title"><strong>Totale Prijs</strong></td>
                </tr>
                <tr>
                    <td class="value">
                        <span data-bind="text: ProductPrice.Name"></span>
                    </td>
                    <td class="value">
                        <select data-bind="options: $root.QuantityRange, value: Quantity" class="item-quantity-dropdown"></select>
                    </td>
                    <td class="value">
                        € <span data-bind="text: ProductPrice.RetailPrice"></span>
                    </td>
                    <td class="discount value" data-bind="visible: Discount">
                        € <span data-bind="text: Discount"></span>
                    </td>
                    <td class="subtotal subtotal-value value">
                        <strong>
                            € <span data-bind="text: Total"></span>
                        </strong>
                    </td>
                </tr>
                <tr>
                    <td colspan="6" class="separator"></td>
                </tr>
                <!-- /ko -->

                <tr class="summary">
                    <td colspan="3" class="ordercode">

                        <ul>
                            <li>
                                <strong>Heeft u een kortingscode?</strong><br>
                                Vul deze dan hier in:
                            </li>
                            <li class="ordercode-input">
                                <input type="text" class="code" data-bind="value: CouponCode" /><a href="#" data-bind="click: ApplyCoupon"><i class="icon-refresh"></i></a>
                            </li>
                            <li data-bind="visible: !IsCouponCodeValid()" style="display:none">
                                <br />
                                <span style="color:red">De door u ingevulde bestelcode is onjuist of verlopen.</span>
                            </li>
                            <li data-bind="visible: IsCouponCodeValid() && TotalDiscount() > 0" style="display:none">
                                <div style="color:darkorange;padding-top:10px;padding-left:10px">Uw voordeel: € <span data-bind="text: TotalDiscount"></span></div>
                            </li>
                        </ul>

                    </td>
                    <td colspan="3" class="subtotal">
                        <span class="total-title">Totaal voor deze bestelling:</span><br>
                        <span class="total-value">€ <span data-bind="text: FinalSubtotal"></span></span>
                    </td>
                </tr>
                <tr>
                    <td colspan="6" class="subtotal buttons">
                        <a href="@Url.FrontUrl().PageUrl("/Home")" class="btn continue-shopping">verder winkelen</a>
                        <a class="btn orange-btn next-step" href="#" data-bind="click: Next">naar stap 2 <i class="icon-chevron-right"></i></a>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<script>
    $(function () {
        var viewModel = new ShoppingCartModel();
        var nextUrl = '@Html.Raw(nextStepUrl)';
        var serviceUrl = '@Url.FrontUrl().SubmissionUrl("Cart")';
        var mappingOptions = {
            Items: {
                key: function (data) {
                    return ko.utils.unwrapObservable(data.Id);
                },
                create: function (args) {
                    return new ShoppingCartItemModel(args.parent, args.data);
                }
            }
        };

        function ShoppingCartItemModel(cart, data) {
            var _this = this;
            var _cart = cart;

            this.ProductPriceId = ko.observable();

            this.Quantity = ko.observable();

            if (data) {
                ko.mapping.fromJS(data, {}, _this);
            }

            _this.Quantity.subscribe(function (quantity) {
                console.log('quantity changed to ' + quantity);
                _cart.UpdateQuantity(_this, quantity);
            });
        }

        function ShoppingCartModel() {
            var _this = this;

            this.CouponCode = ko.observable();

            this.IsCouponCodeValid = ko.observable(true);

            this.QuantityRange = _.range(1, 20, 1);

            this.Items = ko.observableArray();

            this.Subtotal = ko.observable();

            this.TotalDiscount = ko.observable(0);

            this.FinalSubtotal = ko.computed(function () {
                var subtotal = _this.Subtotal();
                var discount = _this.TotalDiscount();

                if (!isNaN(subtotal)) {
                    return (subtotal - discount).toFixed(2);
                }

                return subtotal;
            });

            this.GetDefaultImageUrl = function (product) {
                var images = product.Images();
                if (images && images.length > 0) {
                    return images[0].ImageUrl;
                }

                return null;
            }

            this.RemoveItem = function (item) {
                http.post('/Kooboo-Submit/RemoveCartItem', {
                    ItemId: item.Id()
                })
                .done(HandleAjaxResult);
            }

            this.UpdateQuantity = function (item, quantity) {
                http.post('/Kooboo-Submit/ChangeCartItemQuantity', {
                    ItemId: item.Id(),
                    NewQuantity: quantity
                })
                .done(HandleAjaxResult);
            }

            this.ChangeProductPrice = function (item, newProductPriceId) {
                var quantity = item.Quantity();

                http.post('/Kooboo-Submit/RemoveCartItem', {
                    ItemId: item.Id()
                })
                .done(function (result) {
                    HandleAjaxResult(result, function () {
                        http.post('/Kooboo-Submit/AddCartItem', {
                            ProductPriceId: newProductPriceId,
                            Quantity: quantity
                        })
                        .done(HandleAjaxResult);
                    });
                });
            }

            this.ApplyCoupon = function () {
                var coupon = _this.CouponCode();
                http.post('/Kooboo-Submit/ApplyCoupon', {
                    Coupon: coupon
                })
                .done(function (result) {
                    HandleAjaxResult(result, function () {
                        _this.IsCouponCodeValid(result.Model.Applied);
                        if (_this.IsCouponCodeValid()) {
                            _this.Refresh();
                        }
                    });
                });
            }

            this.Refresh = function () {
                return http.post(serviceUrl + '?action=cartinfo')
                           .done(function (result) {
                               HandleAjaxResult(result, function () {
                                   ko.mapping.fromJS(result.Model, mappingOptions, _this);
                               });
                           });
            }

            this.Next = function () {
                if (_this.Items().length === 0) {
                    alert('Cart is empty.');
                } else {
                    location.href = nextUrl;
                }
            }

            function HandleAjaxResult(result, successHandler) {
                if (result.Success) {
                    if (successHandler && typeof (successHandler) === 'function') {
                        successHandler();
                    } else {
                        _this.Refresh();
                    }
                } else {
                    alert(result.Messages.join('\n'));
                }
            }

            function updateModelIfAjaxSuccess(result) {
                if (result.Success) {
                    ko.mapping.fromJS(result.Model, mappingOptions, _this);
                } else {
                    alert(result.Messages.join('\n'));
                }
            }
        }

        viewModel.Refresh().done(function (result) {
            ko.applyBindings(viewModel, document.getElementById('cart-main'));
        });
    });
</script>