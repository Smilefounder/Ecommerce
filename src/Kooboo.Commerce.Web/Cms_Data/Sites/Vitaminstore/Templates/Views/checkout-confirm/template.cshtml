@using Kooboo.Commerce.API.CmsSite;
@using Kooboo.CMS.Plugins.Vitaminstore;
@{
    var api = Site.Current.Commerce();
    var member = ViewContext.HttpContext.Membership().GetMembershipUser();
    var cartId = ViewContext.HttpContext.CurrentCartId();
    
    var cart = api.ShoppingCarts.ById(cartId)
                                .Include("Items.ProductPrice")
                                .Include("Items.ProductPrice.Product")
                                .Include("Items.ProductPrice.Product.Images")
                                .Include("Items.ProductPrice.Product.Brand")
                                .Include("ShippingAddress")
                                .Include("ShippingAddress.Country")
                                .FirstOrDefault();

    if (cart.Items.Count == 0)
    {
        Response.Redirect("~/Cart");
    }

    var prices = api.Prices.CartPrice(cart.Id);

    var paymentMethods = api.PaymentMethods.ToArray();
} 

<div class="checkout">
    <ul class="checkout-nav">
        <li class="checkout-nav-item completed"><a href="@Url.FrontUrl().PageUrl("Cart")"><i class="icon-ok"></i>Uw Besteloverzicht</a></li>
        <li class="split through"><a></a></li>
        <li class="checkout-nav-item completed"><a href="@Url.FrontUrl().PageUrl("Checkout-Shipping")"><i class="icon-ok step2-ok"></i>Uw persoonlijke gegevens</a></li>
        <li class="split through"><a></a></li>
        <li class="checkout-nav-item selected"><a>Bestelling afronden en betalen</a></li>
    </ul>

    <div>
        <div class="checkout-content checkout-confirm">
            <div class="cart">
                <div class="section-title">
                    <h2>Uw Bestelling</h2>
                    <a class="change" href="@Url.FrontUrl().PageUrl("Cart")"><i class="icon-edit icon-large"></i>Bestelling wijzigen</a>
                </div>
                <table>
                    <tbody>
                        @foreach (var item in cart.Items)
                        {
                            var priceInfo = prices.Items.First(x => x.Id == item.Id);
                            var image = item.ProductPrice.Product.Images.FirstOrDefault();
                            <tr>
                                <td rowspan="3" class="pic top">
                                    @if (image != null) { 
                                        <img src="@image.ImageUrl" style="width:115px;height:115px;" alt="Male Nitro">
                                    }
                                </td>
                                <td colspan="3" class="name top">
                                    <strong>@item.ProductPrice.Name</strong> 
                                    @if (item.ProductPrice.Product.Brand != null) { 
                                    <span>van</span> <em>@item.ProductPrice.Product.Brand.Name</em>
                                    }
                                </td>
                                <td colspan="2" class="subtotal top remove"></td>
                            </tr>
                            <tr>
                                <td class="content field-title">Inhoud</td>
                                <td class="quantity field-title">Aantal</td>
                                <td class="price field-title"><em>Prijs per stuk</em></td>
                                @if (priceInfo.Subtotal.Discount > 0) { 
                                <td class="discount field-title"><em>Uw voordeel</em></td>
                                }
                                <td class="subtotal field-title"><strong>Totale Prijs</strong></td>
                            </tr>
                            <tr>
                                <td class="value">
                                    @item.ProductPrice.Name
                                </td>
                                <td class="value">
                                    @item.Quantity
                                </td>
                                <td class="value">
                                    € @item.ProductPrice.RetailPrice.ToString("f2")
                                </td>
                                @if (priceInfo.Subtotal.Discount > 0) { 
                                <td class="discount value">
                                    € @priceInfo.Subtotal.Discount.ToString("f2")
                                </td>
                                }
                                <td class="subtotal subtotal-value value">
                                    <strong>
                                        € @priceInfo.Subtotal.FinalValue.ToString("f2")
                                    </strong>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" class="separator"></td>
                            </tr>
                        }

                        <tr class="summary">
                            <td colspan="3" class="discountAmounts">
                                
                            </td>
                            <td colspan="3" class="subtotal">
                                <span class="total-title">Totaal voor deze bestelling:</span><br>
                                <span class="total-value">
                                    € @prices.Subtotal.FinalValue.ToString("f2")
                                </span>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="shipping section">
                <div class="section-title">
                    <h2>Uw Bezorgadres</h2>
                    <a class="change" href="@Url.FrontUrl().PageUrl("Checkout-Shipping")"><i class="icon-edit icon-large"></i>Bezorgadres wijzigen</a>
                </div>
                <div class="shipping-detail section-detail">
                    <dl class="address">
                        <dt>
                            @cart.ShippingAddress.FirstName @cart.ShippingAddress.LastName
                        </dt>
                        <dd>
                            @cart.ShippingAddress.Address1
                        </dd>
                        <dd>
                            @cart.ShippingAddress.Postcode @cart.ShippingAddress.City
                        </dd>
                        <dd>
                            @cart.ShippingAddress.Country.Name
                        </dd>
                        <dd>
                            @cart.ShippingAddress.Phone
                        </dd>
                    </dl>
                    <table class="shipment-method">
                        <tbody>
                            <tr>
                                <td></td>
                                <td class="shippingcost">
                                    Verzendkosten
                                </td>
                                <td class="shippingcost">
                                    € @prices.ShippingCost.FinalValue.ToString("f2")
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="payment section">
                <div class="section-title">
                    <h2>Uw Betaalmethode</h2>
                </div>
                <div class="payment-detail section-detail">
                    <form id="checkout-form">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="OrderId" />
                        <div class="payment-list">
                            @if (paymentMethods.Count > 0) { 
                            <table>
                                <tbody>
                                    @foreach (var method in paymentMethods)
                                    {
                                        var paymentMethodFee = 0m;
                                        if (method.AdditionalFeeChargeMode == Kooboo.Commerce.API.PriceChangeMode.ByAmount)
                                        {
                                            paymentMethodFee = method.AdditionalFeeAmount;
                                        }
                                        else
                                        {
                                            paymentMethodFee = Math.Round((decimal)method.AdditionalFeePercent * prices.Total, 2);
                                        }

                                        <tr>
                                            <td>
                                                <span class="vertical_middle">
                                                    <input id="PaymentMethod_@method.Id" type="radio" name="PaymentMethodId" value="@method.Id" data-method-fee="@paymentMethodFee" class="payment-method-item" />
                                                    <label for="PaymentMethod_@method.Id">@method.Name</label>
                                                </span>
                                            </td>
                                            <td>
                                                @if (paymentMethodFee > 0)
                                                {
                                                    <span>&euro; @paymentMethodFee.ToString("f2")</span>
                                                }
                                                else
                                                {
                                                    <span>Gratis</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            }
                            else
                            {
                                <div style="color:red;padding:10px 0;">
                                    No available payment method.<br />Please contact the site master to install one.
                                </div>
                            }
                        </div>
                        <div class="payment-right">
                        </div>
                    </form>
                    <div class="clear">&nbsp;</div>
                </div>
            </div>
            @if (paymentMethods.Count > 0) { 
            <div class="summary section">
                <ul>
                    <li><strong>Totaal voor deze bestelling:</strong></li>
                    <li class="total-amount">
                        € <span class="value">@prices.Total.ToString("f2")</span>
                    </li>
                    <li>
                        <em>
                            BTW: &euro; @prices.Tax.FinalValue.ToString("f2"),
                            Verzendkosten: &euro; @prices.ShippingCost.FinalValue.ToString("f2")
                        </em>
                    </li>
                    <li><em>Inclusief BTW, Verzend- &amp; Transactiekosten</em></li>
                    <li class="pay">
                        <a class="pay-btn" href="#">Nu Bevestigen &amp; Betalen</a>
                    </li>
                    <li class="continue"><a href="/ContinueShopping.aspx">U kunt ook nog even verder winkelen</a></li>

                    <li class="terms">Bij het plaatsen van uw bestelling gaat u akkoord met de</li>
                    <li class="terms"><a href="/klantenservice/algemene-voorwaarden/" target="_blank">Algemene Voorwaarden</a></li>
                    <li class="terms">van Vitaminstore Online B.V.</li>
                </ul>
            </div>
            }
        </div>
    </div>
</div>

<script>
    $(function () {
        var cartTotal = @(prices.Total.ToString("f2"));

        function SubmitOrder() {
            return http.post('@Url.FrontUrl().SubmissionUrl("SubmitOrder")')
                       .done(function (result) {
                           if (result.Success) {
                               $('input[name="OrderId"]').val(result.Model.OrderId);
                               PayOrder();
                           } else {
                               alert(result.Messages[0]);
                           }
                       });
        }

        function PayOrder() {
            $.ajax({
                url: '@Url.FrontUrl().SubmissionUrl("PayOrder")',
                type: 'POST',
                data: $('#checkout-form').serializeArray()
            })
            .done(function (result) {
                if (result.Success) {
                    if (result.RedirectUrl) {
                        location.href = result.Model.RedirectUrl;
                    } else {
                        location.href = '/Checkout-Thankyou';
                    }
                } else {
                    alert(result.Messages.join('\n'));
                }
            });
        }

        function SelectPaymentMethod(methodId) {
            var $method = $('.payment-list .payment-method-item[value=' + methodId + ']');
            var fee = parseFloat($method.data('method-fee'));
            var newTotal = cartTotal + fee;

            $method.prop('checked', true);
            $('.total-amount .value').text(newTotal.toFixed(2));
        }

        $('.payment-list .payment-method-item').click(function () {
            SelectPaymentMethod($(this).val());
        });

        $('.pay-btn').on('click', function () {
            SubmitOrder();
            return false;
        });

        SelectPaymentMethod($('.payment-list .payment-method-item:first').val());
    });
</script>